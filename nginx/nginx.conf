events {}

http {
    # Specify global access and error log files
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Redirect all HTTP traffic to HTTPS
    server {
        listen 80;  # Listening on port 80 for HTTP
        server_name hortesie.fr;

        # Redirect all HTTP requests to HTTPS
 
        location ~ /.well-known/acme-challenge {
            allow all;
            root /var/www/certbot;
        }


        return 301 https://$host$request_uri;
        location ^~ /api/ {
            rewrite ^/api/(.*) /$1  break;
              # Forwarding requests to Keycloak container
            proxy_pass http://platform:8000;


            client_max_body_size 100M;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Original-URI $request_uri;  # Passing the original URI to backend
            proxy_cookie_path / "/; secure; SameSite=none";
        }    
        location / {
            if ($host = auth.hortesie.fr) {
                proxy_pass https://keycloak:8443;
                break;
            }            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            client_max_body_size 100M;
            proxy_pass http://front:3000;  # Forwarding requests to react container
        }
    }

    server {
        listen [::]:443 ssl;
        listen 443 ssl;
        server_name *.hortesie.fr;

        # SSL certificate files

        ssl_certificate /etc/nginx/ssl/live/hortesie.fr-0001/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/live/hortesie.fr-0001/privkey.pem;

        # SSL settings
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        client_max_body_size 20M;

        root /var/www/html;  # Document root directory
        index index.html index.htm index.nginx-debian.html;  # Index files

        # Specify logs for HTTPS server
        access_log /var/log/nginx/https_access.log;
        error_log /var/log/nginx/https_error.log;


        location / {
            if ($host = auth.hortesie.fr) {
                proxy_pass https://keycloak:8443;
                break;
            } 
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            client_max_body_size 100M;
        }
        
    }

    server {
        listen [::]:443 ssl http2;
        listen 443 ssl http2;
        server_name hortesie.fr;

        # SSL certificate files

        ssl_certificate /etc/nginx/ssl/live/hortesie.fr/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/live/hortesie.fr/privkey.pem;

        # SSL settings
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        client_max_body_size 20M;

        root /var/www/html;  # Document root directory
        index index.html index.htm index.nginx-debian.html;  # Index files

        # Specify logs for HTTPS server
        access_log /var/log/nginx/https_access.log;
        error_log /var/log/nginx/https_error.log;

        location /api/media/uploads/ {
            alias /hortesie_djangoapp/files/uploads/;
            try_files $uri $uri/ =404;
        }
        location ^~ /api/ {
            rewrite ^/api/(.*) /$1  break;
              # Forwarding requests to Keycloak container
            include uwsgi_params;
            uwsgi_pass platform:8000;


            client_max_body_size 100M;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Original-URI $request_uri;  # Passing the original URI to backend
            proxy_cookie_path / "/; secure; SameSite=none";
        }

        location / {

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            client_max_body_size 100M;
            proxy_pass http://front:3000;  # Forwarding requests to react container
        }
    }
        # Optionally, you can specify separate logs for this server block
        access_log /var/log/nginx/http_redirect_access.log;
        error_log /var/log/nginx/http_redirect_error.log;
    }
   
